/**
 * 钉钉API
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.choerodon.devops.infra.dingtalk.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.*;


/**
 * 部门详情
 */
@ApiModel(description = "部门详情")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-07-14T17:49:16.234+08:00")
public class User   {
  @JsonProperty("userid")
  private String userid = null;

  @JsonProperty("order")
  private Long order = null;

  @JsonProperty("dingId")
  private String dingId = null;

  @JsonProperty("mobile")
  private String mobile = null;

  @JsonProperty("tel")
  private String tel = null;

  @JsonProperty("workPlace")
  private String workPlace = null;

  @JsonProperty("remark")
  private String remark = null;

  @JsonProperty("isAdmin")
  private Boolean isAdmin = null;

  @JsonProperty("isBoss")
  private Boolean isBoss = null;

  @JsonProperty("isHide")
  private Boolean isHide = null;

  @JsonProperty("isLeader")
  private Boolean isLeader = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("active")
  private Boolean active = null;

  @JsonProperty("department")
  private List<Long> department = new ArrayList<Long>();

  @JsonProperty("position")
  private String position = null;

  @JsonProperty("email")
  private String email = null;

  @JsonProperty("orgEmail")
  private String orgEmail = null;

  @JsonProperty("avatar")
  private String avatar = null;

  @JsonProperty("jobnumber")
  private String jobnumber = null;

  @JsonProperty("extattr")
  private Map<String, String> extattr = new HashMap<String, String>();

  public User userid(String userid) {
    this.userid = userid;
    return this;
  }

   /**
   * 员工唯一标识ID（不可修改）
   * @return userid
  **/
  @ApiModelProperty(example = "null", value = "员工唯一标识ID（不可修改）")
  public String getUserid() {
    return userid;
  }

  public void setUserid(String userid) {
    this.userid = userid;
  }

  public User order(Long order) {
    this.order = order;
    return this;
  }

   /**
   * 表示人员在此部门中的排序，列表是按order的倒序排列输出的，即从大到小排列输出的
   * @return order
  **/
  @ApiModelProperty(example = "null", value = "表示人员在此部门中的排序，列表是按order的倒序排列输出的，即从大到小排列输出的")
  public Long getOrder() {
    return order;
  }

  public void setOrder(Long order) {
    this.order = order;
  }

  public User dingId(String dingId) {
    this.dingId = dingId;
    return this;
  }

   /**
   * 钉钉ID
   * @return dingId
  **/
  @ApiModelProperty(example = "null", value = "钉钉ID")
  public String getDingId() {
    return dingId;
  }

  public void setDingId(String dingId) {
    this.dingId = dingId;
  }

  public User mobile(String mobile) {
    this.mobile = mobile;
    return this;
  }

   /**
   * 手机号（ISV不可见）
   * @return mobile
  **/
  @ApiModelProperty(example = "null", value = "手机号（ISV不可见）")
  public String getMobile() {
    return mobile;
  }

  public void setMobile(String mobile) {
    this.mobile = mobile;
  }

  public User tel(String tel) {
    this.tel = tel;
    return this;
  }

   /**
   * 分机号（ISV不可见）
   * @return tel
  **/
  @ApiModelProperty(example = "null", value = "分机号（ISV不可见）")
  public String getTel() {
    return tel;
  }

  public void setTel(String tel) {
    this.tel = tel;
  }

  public User workPlace(String workPlace) {
    this.workPlace = workPlace;
    return this;
  }

   /**
   * 办公地点（ISV不可见）
   * @return workPlace
  **/
  @ApiModelProperty(example = "null", value = "办公地点（ISV不可见）")
  public String getWorkPlace() {
    return workPlace;
  }

  public void setWorkPlace(String workPlace) {
    this.workPlace = workPlace;
  }

  public User remark(String remark) {
    this.remark = remark;
    return this;
  }

   /**
   * 备注（ISV不可见）
   * @return remark
  **/
  @ApiModelProperty(example = "null", value = "备注（ISV不可见）")
  public String getRemark() {
    return remark;
  }

  public void setRemark(String remark) {
    this.remark = remark;
  }

  public User isAdmin(Boolean isAdmin) {
    this.isAdmin = isAdmin;
    return this;
  }

   /**
   * 是否是企业的管理员, true表示是, false表示不是
   * @return isAdmin
  **/
  @ApiModelProperty(example = "null", value = "是否是企业的管理员, true表示是, false表示不是")
  public Boolean getIsAdmin() {
    return isAdmin;
  }

  public void setIsAdmin(Boolean isAdmin) {
    this.isAdmin = isAdmin;
  }

  public User isBoss(Boolean isBoss) {
    this.isBoss = isBoss;
    return this;
  }

   /**
   * 是否为企业的老板, true表示是, false表示不是
   * @return isBoss
  **/
  @ApiModelProperty(example = "null", value = "是否为企业的老板, true表示是, false表示不是")
  public Boolean getIsBoss() {
    return isBoss;
  }

  public void setIsBoss(Boolean isBoss) {
    this.isBoss = isBoss;
  }

  public User isHide(Boolean isHide) {
    this.isHide = isHide;
    return this;
  }

   /**
   * 是否隐藏号码, true表示是, false表示不是
   * @return isHide
  **/
  @ApiModelProperty(example = "null", value = "是否隐藏号码, true表示是, false表示不是")
  public Boolean getIsHide() {
    return isHide;
  }

  public void setIsHide(Boolean isHide) {
    this.isHide = isHide;
  }

  public User isLeader(Boolean isLeader) {
    this.isLeader = isLeader;
    return this;
  }

   /**
   * 是否是部门的主管, true表示是, false表示不是
   * @return isLeader
  **/
  @ApiModelProperty(example = "null", value = "是否是部门的主管, true表示是, false表示不是")
  public Boolean getIsLeader() {
    return isLeader;
  }

  public void setIsLeader(Boolean isLeader) {
    this.isLeader = isLeader;
  }

  public User name(String name) {
    this.name = name;
    return this;
  }

   /**
   * 成员名称
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "成员名称")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public User active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * 表示该用户是否激活了钉钉
   * @return active
  **/
  @ApiModelProperty(example = "null", value = "表示该用户是否激活了钉钉")
  public Boolean getActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  public User department(List<Long> department) {
    this.department = department;
    return this;
  }

  public User addDepartmentItem(Long departmentItem) {
    this.department.add(departmentItem);
    return this;
  }

   /**
   * 成员所属部门id列表
   * @return department
  **/
  @ApiModelProperty(example = "null", value = "成员所属部门id列表")
  public List<Long> getDepartment() {
    return department;
  }

  public void setDepartment(List<Long> department) {
    this.department = department;
  }

  public User position(String position) {
    this.position = position;
    return this;
  }

   /**
   * 职位信息
   * @return position
  **/
  @ApiModelProperty(example = "null", value = "职位信息")
  public String getPosition() {
    return position;
  }

  public void setPosition(String position) {
    this.position = position;
  }

  public User email(String email) {
    this.email = email;
    return this;
  }

   /**
   * 员工的邮箱
   * @return email
  **/
  @ApiModelProperty(example = "null", value = "员工的邮箱")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public User orgEmail(String orgEmail) {
    this.orgEmail = orgEmail;
    return this;
  }

   /**
   * 员工的企业邮箱
   * @return orgEmail
  **/
  @ApiModelProperty(example = "null", value = "员工的企业邮箱")
  public String getOrgEmail() {
    return orgEmail;
  }

  public void setOrgEmail(String orgEmail) {
    this.orgEmail = orgEmail;
  }

  public User avatar(String avatar) {
    this.avatar = avatar;
    return this;
  }

   /**
   * 头像url
   * @return avatar
  **/
  @ApiModelProperty(example = "null", value = "头像url")
  public String getAvatar() {
    return avatar;
  }

  public void setAvatar(String avatar) {
    this.avatar = avatar;
  }

  public User jobnumber(String jobnumber) {
    this.jobnumber = jobnumber;
    return this;
  }

   /**
   * 员工工号
   * @return jobnumber
  **/
  @ApiModelProperty(example = "null", value = "员工工号")
  public String getJobnumber() {
    return jobnumber;
  }

  public void setJobnumber(String jobnumber) {
    this.jobnumber = jobnumber;
  }

  public User extattr(Map<String, String> extattr) {
    this.extattr = extattr;
    return this;
  }

  public User putExtattrItem(String key, String extattrItem) {
    this.extattr.put(key, extattrItem);
    return this;
  }

   /**
   * 扩展属性，可以设置多种属性(但手机上最多只能显示10个扩展属性，具体显示哪些属性，请到OA管理后台->设置->通讯录信息设置和OA管理后台->设置->手机端显示信息设置)
   * @return extattr
  **/
  @ApiModelProperty(example = "null", value = "扩展属性，可以设置多种属性(但手机上最多只能显示10个扩展属性，具体显示哪些属性，请到OA管理后台->设置->通讯录信息设置和OA管理后台->设置->手机端显示信息设置)")
  public Map<String, String> getExtattr() {
    return extattr;
  }

  public void setExtattr(Map<String, String> extattr) {
    this.extattr = extattr;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    User user = (User) o;
    return Objects.equals(this.userid, user.userid) &&
        Objects.equals(this.order, user.order) &&
        Objects.equals(this.dingId, user.dingId) &&
        Objects.equals(this.mobile, user.mobile) &&
        Objects.equals(this.tel, user.tel) &&
        Objects.equals(this.workPlace, user.workPlace) &&
        Objects.equals(this.remark, user.remark) &&
        Objects.equals(this.isAdmin, user.isAdmin) &&
        Objects.equals(this.isBoss, user.isBoss) &&
        Objects.equals(this.isHide, user.isHide) &&
        Objects.equals(this.isLeader, user.isLeader) &&
        Objects.equals(this.name, user.name) &&
        Objects.equals(this.active, user.active) &&
        Objects.equals(this.department, user.department) &&
        Objects.equals(this.position, user.position) &&
        Objects.equals(this.email, user.email) &&
        Objects.equals(this.orgEmail, user.orgEmail) &&
        Objects.equals(this.avatar, user.avatar) &&
        Objects.equals(this.jobnumber, user.jobnumber) &&
        Objects.equals(this.extattr, user.extattr);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userid, order, dingId, mobile, tel, workPlace, remark, isAdmin, isBoss, isHide, isLeader, name, active, department, position, email, orgEmail, avatar, jobnumber, extattr);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class User {\n");

    sb.append("    userid: ").append(toIndentedString(userid)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    dingId: ").append(toIndentedString(dingId)).append("\n");
    sb.append("    mobile: ").append(toIndentedString(mobile)).append("\n");
    sb.append("    tel: ").append(toIndentedString(tel)).append("\n");
    sb.append("    workPlace: ").append(toIndentedString(workPlace)).append("\n");
    sb.append("    remark: ").append(toIndentedString(remark)).append("\n");
    sb.append("    isAdmin: ").append(toIndentedString(isAdmin)).append("\n");
    sb.append("    isBoss: ").append(toIndentedString(isBoss)).append("\n");
    sb.append("    isHide: ").append(toIndentedString(isHide)).append("\n");
    sb.append("    isLeader: ").append(toIndentedString(isLeader)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    department: ").append(toIndentedString(department)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    orgEmail: ").append(toIndentedString(orgEmail)).append("\n");
    sb.append("    avatar: ").append(toIndentedString(avatar)).append("\n");
    sb.append("    jobnumber: ").append(toIndentedString(jobnumber)).append("\n");
    sb.append("    extattr: ").append(toIndentedString(extattr)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

