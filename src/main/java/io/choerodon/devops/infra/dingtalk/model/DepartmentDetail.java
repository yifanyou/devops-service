/**
 * 钉钉API
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.choerodon.devops.infra.dingtalk.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * 部门详情
 */
@ApiModel(description = "部门详情")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-07-14T17:49:16.234+08:00")
public class DepartmentDetail extends Department  {
  @JsonProperty("errcode")
  private Long errcode = null;

  @JsonProperty("errmsg")
  private String errmsg = null;

  @JsonProperty("order")
  private Long order = null;

  @JsonProperty("deptHiding")
  private Boolean deptHiding = null;

  @JsonProperty("deptPerimits")
  private String deptPerimits = null;

  @JsonProperty("userPerimits")
  private String userPerimits = null;

  @JsonProperty("outerDept")
  private Boolean outerDept = null;

  @JsonProperty("outerPermitDepts")
  private String outerPermitDepts = null;

  @JsonProperty("outerPermitUsers")
  private String outerPermitUsers = null;

  @JsonProperty("orgDeptOwner")
  private String orgDeptOwner = null;

  @JsonProperty("deptManagerUseridList")
  private String deptManagerUseridList = null;

  public DepartmentDetail errcode(Long errcode) {
    this.errcode = errcode;
    return this;
  }

   /**
   * 错误码
   * @return errcode
  **/
  @ApiModelProperty(example = "null", value = "错误码")
  public Long getErrcode() {
    return errcode;
  }

  public void setErrcode(Long errcode) {
    this.errcode = errcode;
  }

  public DepartmentDetail errmsg(String errmsg) {
    this.errmsg = errmsg;
    return this;
  }

   /**
   * 错误信息
   * @return errmsg
  **/
  @ApiModelProperty(example = "null", value = "错误信息")
  public String getErrmsg() {
    return errmsg;
  }

  public void setErrmsg(String errmsg) {
    this.errmsg = errmsg;
  }

  public DepartmentDetail order(Long order) {
    this.order = order;
    return this;
  }

   /**
   * 在父部门中的次序值
   * @return order
  **/
  @ApiModelProperty(example = "null", value = "在父部门中的次序值")
  public Long getOrder() {
    return order;
  }

  public void setOrder(Long order) {
    this.order = order;
  }

  public DepartmentDetail deptHiding(Boolean deptHiding) {
    this.deptHiding = deptHiding;
    return this;
  }

   /**
   * 是否隐藏部门, true表示隐藏, false表示显示 
   * @return deptHiding
  **/
  @ApiModelProperty(example = "null", value = "是否隐藏部门, true表示隐藏, false表示显示 ")
  public Boolean getDeptHiding() {
    return deptHiding;
  }

  public void setDeptHiding(Boolean deptHiding) {
    this.deptHiding = deptHiding;
  }

  public DepartmentDetail deptPerimits(String deptPerimits) {
    this.deptPerimits = deptPerimits;
    return this;
  }

   /**
   * 可以查看指定隐藏部门的其他部门列表，如果部门隐藏，则此值生效，取值为其他的部门id组成的的字符串，使用|符号进行分割 
   * @return deptPerimits
  **/
  @ApiModelProperty(example = "null", value = "可以查看指定隐藏部门的其他部门列表，如果部门隐藏，则此值生效，取值为其他的部门id组成的的字符串，使用|符号进行分割 ")
  public String getDeptPerimits() {
    return deptPerimits;
  }

  public void setDeptPerimits(String deptPerimits) {
    this.deptPerimits = deptPerimits;
  }

  public DepartmentDetail userPerimits(String userPerimits) {
    this.userPerimits = userPerimits;
    return this;
  }

   /**
   * 可以查看指定隐藏部门的其他人员列表，如果部门隐藏，则此值生效，取值为其他的人员userid组成的的字符串，使用|符号进行分割 
   * @return userPerimits
  **/
  @ApiModelProperty(example = "null", value = "可以查看指定隐藏部门的其他人员列表，如果部门隐藏，则此值生效，取值为其他的人员userid组成的的字符串，使用|符号进行分割 ")
  public String getUserPerimits() {
    return userPerimits;
  }

  public void setUserPerimits(String userPerimits) {
    this.userPerimits = userPerimits;
  }

  public DepartmentDetail outerDept(Boolean outerDept) {
    this.outerDept = outerDept;
    return this;
  }

   /**
   * 是否本部门的员工仅可见员工自己, 为true时，本部门员工默认只能看到员工自己 
   * @return outerDept
  **/
  @ApiModelProperty(example = "null", value = "是否本部门的员工仅可见员工自己, 为true时，本部门员工默认只能看到员工自己 ")
  public Boolean getOuterDept() {
    return outerDept;
  }

  public void setOuterDept(Boolean outerDept) {
    this.outerDept = outerDept;
  }

  public DepartmentDetail outerPermitDepts(String outerPermitDepts) {
    this.outerPermitDepts = outerPermitDepts;
    return this;
  }

   /**
   * 本部门的员工仅可见员工自己为true时，可以配置额外可见部门，值为部门id组成的的字符串，使用|符号进行分割 
   * @return outerPermitDepts
  **/
  @ApiModelProperty(example = "null", value = "本部门的员工仅可见员工自己为true时，可以配置额外可见部门，值为部门id组成的的字符串，使用|符号进行分割 ")
  public String getOuterPermitDepts() {
    return outerPermitDepts;
  }

  public void setOuterPermitDepts(String outerPermitDepts) {
    this.outerPermitDepts = outerPermitDepts;
  }

  public DepartmentDetail outerPermitUsers(String outerPermitUsers) {
    this.outerPermitUsers = outerPermitUsers;
    return this;
  }

   /**
   * 本部门的员工仅可见员工自己为true时，可以配置额外可见人员，值为userid组成的的字符串，使用| 符号进行分割 
   * @return outerPermitUsers
  **/
  @ApiModelProperty(example = "null", value = "本部门的员工仅可见员工自己为true时，可以配置额外可见人员，值为userid组成的的字符串，使用| 符号进行分割 ")
  public String getOuterPermitUsers() {
    return outerPermitUsers;
  }

  public void setOuterPermitUsers(String outerPermitUsers) {
    this.outerPermitUsers = outerPermitUsers;
  }

  public DepartmentDetail orgDeptOwner(String orgDeptOwner) {
    this.orgDeptOwner = orgDeptOwner;
    return this;
  }

   /**
   * 企业群群主
   * @return orgDeptOwner
  **/
  @ApiModelProperty(example = "null", value = "企业群群主")
  public String getOrgDeptOwner() {
    return orgDeptOwner;
  }

  public void setOrgDeptOwner(String orgDeptOwner) {
    this.orgDeptOwner = orgDeptOwner;
  }

  public DepartmentDetail deptManagerUseridList(String deptManagerUseridList) {
    this.deptManagerUseridList = deptManagerUseridList;
    return this;
  }

   /**
   * 部门的主管列表,取值为由主管的userid组成的字符串，不同的userid使用|符号进行分割 
   * @return deptManagerUseridList
  **/
  @ApiModelProperty(example = "null", value = "部门的主管列表,取值为由主管的userid组成的字符串，不同的userid使用|符号进行分割 ")
  public String getDeptManagerUseridList() {
    return deptManagerUseridList;
  }

  public void setDeptManagerUseridList(String deptManagerUseridList) {
    this.deptManagerUseridList = deptManagerUseridList;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DepartmentDetail departmentDetail = (DepartmentDetail) o;
    return Objects.equals(this.errcode, departmentDetail.errcode) &&
        Objects.equals(this.errmsg, departmentDetail.errmsg) &&
        Objects.equals(this.order, departmentDetail.order) &&
        Objects.equals(this.deptHiding, departmentDetail.deptHiding) &&
        Objects.equals(this.deptPerimits, departmentDetail.deptPerimits) &&
        Objects.equals(this.userPerimits, departmentDetail.userPerimits) &&
        Objects.equals(this.outerDept, departmentDetail.outerDept) &&
        Objects.equals(this.outerPermitDepts, departmentDetail.outerPermitDepts) &&
        Objects.equals(this.outerPermitUsers, departmentDetail.outerPermitUsers) &&
        Objects.equals(this.orgDeptOwner, departmentDetail.orgDeptOwner) &&
        Objects.equals(this.deptManagerUseridList, departmentDetail.deptManagerUseridList) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(errcode, errmsg, order, deptHiding, deptPerimits, userPerimits, outerDept, outerPermitDepts, outerPermitUsers, orgDeptOwner, deptManagerUseridList, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DepartmentDetail {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    errcode: ").append(toIndentedString(errcode)).append("\n");
    sb.append("    errmsg: ").append(toIndentedString(errmsg)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    deptHiding: ").append(toIndentedString(deptHiding)).append("\n");
    sb.append("    deptPerimits: ").append(toIndentedString(deptPerimits)).append("\n");
    sb.append("    userPerimits: ").append(toIndentedString(userPerimits)).append("\n");
    sb.append("    outerDept: ").append(toIndentedString(outerDept)).append("\n");
    sb.append("    outerPermitDepts: ").append(toIndentedString(outerPermitDepts)).append("\n");
    sb.append("    outerPermitUsers: ").append(toIndentedString(outerPermitUsers)).append("\n");
    sb.append("    orgDeptOwner: ").append(toIndentedString(orgDeptOwner)).append("\n");
    sb.append("    deptManagerUseridList: ").append(toIndentedString(deptManagerUseridList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

