/**
 * 钉钉API
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.choerodon.devops.infra.dingtalk.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * 消息体
 */
@ApiModel(description = "消息体")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2017-07-14T17:49:16.234+08:00")
public class Oa   {
  @JsonProperty("message_url")
  private String messageUrl = null;

  @JsonProperty("pc_message_url")
  private String pcMessageUrl = null;

  @JsonProperty("head")
  private OaHead head = null;

  @JsonProperty("body")
  private OaBody body = null;

  @JsonProperty("rich")
  private OaRich rich = null;

  @JsonProperty("content")
  private String content = null;

  @JsonProperty("image")
  private String image = null;

  @JsonProperty("file_count")
  private String fileCount = null;

  @JsonProperty("author")
  private String author = null;

  public Oa messageUrl(String messageUrl) {
    this.messageUrl = messageUrl;
    return this;
  }

   /**
   * 客户端点击消息时跳转到的H5地址
   * @return messageUrl
  **/
  @ApiModelProperty(example = "null", value = "客户端点击消息时跳转到的H5地址")
  public String getMessageUrl() {
    return messageUrl;
  }

  public void setMessageUrl(String messageUrl) {
    this.messageUrl = messageUrl;
  }

  public Oa pcMessageUrl(String pcMessageUrl) {
    this.pcMessageUrl = pcMessageUrl;
    return this;
  }

   /**
   * PC端点击消息时跳转到的H5地址
   * @return pcMessageUrl
  **/
  @ApiModelProperty(example = "null", value = "PC端点击消息时跳转到的H5地址")
  public String getPcMessageUrl() {
    return pcMessageUrl;
  }

  public void setPcMessageUrl(String pcMessageUrl) {
    this.pcMessageUrl = pcMessageUrl;
  }

  public Oa head(OaHead head) {
    this.head = head;
    return this;
  }

   /**
   * Get head
   * @return head
  **/
  @ApiModelProperty(example = "null", value = "")
  public OaHead getHead() {
    return head;
  }

  public void setHead(OaHead head) {
    this.head = head;
  }

  public Oa body(OaBody body) {
    this.body = body;
    return this;
  }

   /**
   * Get body
   * @return body
  **/
  @ApiModelProperty(example = "null", value = "")
  public OaBody getBody() {
    return body;
  }

  public void setBody(OaBody body) {
    this.body = body;
  }

  public Oa rich(OaRich rich) {
    this.rich = rich;
    return this;
  }

   /**
   * Get rich
   * @return rich
  **/
  @ApiModelProperty(example = "null", value = "")
  public OaRich getRich() {
    return rich;
  }

  public void setRich(OaRich rich) {
    this.rich = rich;
  }

  public Oa content(String content) {
    this.content = content;
    return this;
  }

   /**
   * 消息体的内容，最多显示3行
   * @return content
  **/
  @ApiModelProperty(example = "null", value = "消息体的内容，最多显示3行")
  public String getContent() {
    return content;
  }

  public void setContent(String content) {
    this.content = content;
  }

  public Oa image(String image) {
    this.image = image;
    return this;
  }

   /**
   * 消息体中的图片media_id
   * @return image
  **/
  @ApiModelProperty(example = "null", value = "消息体中的图片media_id")
  public String getImage() {
    return image;
  }

  public void setImage(String image) {
    this.image = image;
  }

  public Oa fileCount(String fileCount) {
    this.fileCount = fileCount;
    return this;
  }

   /**
   * 自定义的附件数目。此数字仅供显示，钉钉不作验证
   * @return fileCount
  **/
  @ApiModelProperty(example = "null", value = "自定义的附件数目。此数字仅供显示，钉钉不作验证")
  public String getFileCount() {
    return fileCount;
  }

  public void setFileCount(String fileCount) {
    this.fileCount = fileCount;
  }

  public Oa author(String author) {
    this.author = author;
    return this;
  }

   /**
   * 自定义的作者名字
   * @return author
  **/
  @ApiModelProperty(example = "null", value = "自定义的作者名字")
  public String getAuthor() {
    return author;
  }

  public void setAuthor(String author) {
    this.author = author;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Oa oa = (Oa) o;
    return Objects.equals(this.messageUrl, oa.messageUrl) &&
        Objects.equals(this.pcMessageUrl, oa.pcMessageUrl) &&
        Objects.equals(this.head, oa.head) &&
        Objects.equals(this.body, oa.body) &&
        Objects.equals(this.rich, oa.rich) &&
        Objects.equals(this.content, oa.content) &&
        Objects.equals(this.image, oa.image) &&
        Objects.equals(this.fileCount, oa.fileCount) &&
        Objects.equals(this.author, oa.author);
  }

  @Override
  public int hashCode() {
    return Objects.hash(messageUrl, pcMessageUrl, head, body, rich, content, image, fileCount, author);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Oa {\n");

    sb.append("    messageUrl: ").append(toIndentedString(messageUrl)).append("\n");
    sb.append("    pcMessageUrl: ").append(toIndentedString(pcMessageUrl)).append("\n");
    sb.append("    head: ").append(toIndentedString(head)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    rich: ").append(toIndentedString(rich)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    fileCount: ").append(toIndentedString(fileCount)).append("\n");
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

